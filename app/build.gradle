apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.hk.newsapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    def support_version = "1.0.0"
    def constraint_version = "2.0.0-alpha2"
    def room_version = "2.1.0-alpha01"
    def lifecycle_version = "2.0.0"
    def rxjava_version = "2.1.9"
    def rxandroid_version = "2.0.2"
    def glide_version = "4.8.0"
    def dagger_version = "2.16"
    def retrofit_version = "2.4.0"
    def retrofit_rx_adapter_version = "2.3.0"
    def leak_canary_version = "1.6.2"
    def fabric_version = "2.9.5@aar"
    def photo_view_version = "1.2.4"
    def junit_version = "4.12"
    def test_runner_version = "1.1.0"
    def espresso_version = "3.1.0"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$support_version"
    implementation "androidx.legacy:legacy-support-v4:$support_version"
    implementation "com.google.android.material:material:$support_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    //Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    //Rx Java 2
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    //ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // RxJava support for Retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_rx_adapter_version"

    //Gson
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leak_canary_version"

    //Fabric
    implementation("com.crashlytics.sdk.android:crashlytics:$fabric_version") {
        transitive = true;
    }

    //Photo View
    implementation "com.github.chrisbanes.photoview:library:$photo_view_version"

    //Tests
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}
